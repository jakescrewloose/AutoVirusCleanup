#AutoIt3Wrapper_Run_Debug_Mode=y

Local $title = "Malwarebytes Anti-Malware"
Local $LogTitle = "mbam-log-"

Func MBAMScan()
	; Return values .: Success - returns True
	;                 Failure - False
	;                 |@Error  - 1 = Malwarebytes running and can't be closed
	;                 |@Error  - 2 = unable to run Malwarebytes (may not be installed)
	;Stop Malewarebytes if it is already running
	If ProcessExists("mbam.exe") Then
		ProcessClose("mbam.exe")
		ProcessWaitClose("mbam.exe", 5)
		If @error Then
			; Can't close process
			MsgBox(0, "", "Error")
			Return SetError(1, 0, False)
		EndIf
	EndIf
	; Run update
	Local $LogData = ""

	Local $pid = Run(GetInstalledPath() & "mbam.exe /fullscanterminate", GetInstalledPath())
	If @error Then
		MsgBox(0, "", "Error Running")
		Return SetError(2, 0, False)
	EndIf

	WinClose($LogTitle)

	Opt("WinTitleMatchMode", 4)
	While ProcessExists($pid)

		If WinExists($title, "The scan completed successfull") Then
			WriteLn("Scan Finished")

			;Scan Complete
			WinWait($title, "The scan completed successfull")
			If Not WinActive($title, "The scan completed successfull") Then WinActivate($title, "The scan completed successfull")
			ControlClick($title, "The scan completed successfull", "Button1")
		EndIf

		If WinExists($title, "Show Results") Then
			WinWait($title, "Show Results")
			If Not WinActive($title, "Show Results") Then WinActivate($title, "Show Results")
			WinWaitActive($title, "Show Results")
			ControlClick($title, "Show Results", "ThunderRT6CommandButton2")
			ControlClick($title, "Show Results", "ThunderRT6PictureBoxDC1")
			Send("{TAB}")
			Send("{TAB}")
			Send("{TAB}")
			Send("{TAB}")
			Send("{ENTER}")
		EndIf

		If WinExists($title, "URGENT! You must restart your") Then
			;Restart Computer
			If Not WinActive($title, "URGENT! You must restart your ") Then WinActivate($title, "URGENT! You must restart your ")
			WinWait($title, "URGENT! You must restart your ")
			ControlClick($title, "URGENT! You must restart your ", "Button2")
		EndIf

		If WinExists($title, "Perform quick scan") Then
			WinWait($title, "Perform quick scan")
			If Not WinActive($title, "Perform quick scan") Then WinActivate($title, "Perform quick scan")
			WinWaitActive($title, "Perform quick scan")
			ProcessClose("mbam.exe")
			ExitLoop
		EndIf

		If WinExists($title, "selected items have been removed") Then
			WinWait($title, "selected items have been removed")
			If Not WinActive($title, "selected items have been removed") Then WinActivate($title, "selected items have been removed")
			WinWaitActive($title, "selected items have been removed")
			Send("{RIGHT}")
			Send("{ENTER}")
		EndIf

		If WinExists($LogTitle, "") Then
			WriteLn("Get Log")
			Local $data = ControlGetText($LogTitle, "", "[CLASS:Edit]")
			WinClose($LogTitle)
			$LogData = $data
		EndIf
		Sleep(50)

	WEnd

	If $LogData = "" Then
		Return "No Malware Found!"
	Else
		Return $LogData
	EndIf
EndFunc   ;==>MBAMScan

Func Notice($msg)
	TrayTip("Notice", $msg, 30, 1)
	TraySetToolTip($msg)
EndFunc   ;==>Notice

Func MBAMUpdate()
	; Return values .: Success - returns True
	;                 Failure - False
	;                 |@Error  - 1 = Malwarebytes running and can't be closed
	;                 |@Error  - 2 = unable to run Malwarebytes (may not be installed)
	;Stop Malewarebytes if it is already running
	If ProcessExists("mbam.exe") Then
		ProcessClose("mbam.exe")
		ProcessWaitClose("mbam.exe", 5)
		If @error Then
			WriteLn("Cant Close existing mbam.exe process")
			Return SetError(1, 0, False)
		EndIf
	EndIf
	; Run update
	WriteLn("Updateing definitions")
	Local $pid = Run(GetInstalledPath() & "mbam.exe /update", GetInstalledPath())
	If @error Then
		WriteLn("Error Running Updater")
		Return SetError(2, 0, False)
	EndIf

	Opt("WinTitleMatchMode", 4)

	While ProcessExists($pid)
		If WinExists($title, "The database was successfully") Then
			If Not WinActive($title, "The database was successfully") Then WinActivate($title, "The database was successfully")
			ControlClick($title, "The database was successfully", "Button1")
		ElseIf WinExists($title, "You have the latest database v") Then
			If Not WinActive($title, "You have the latest database v") Then WinActivate($title, "You have the latest database v")
			ControlClick($title, "You have the latest database v", "Button1")
		EndIf
		Sleep(50)
	WEnd

	Return True
EndFunc   ;==>MBAMUpdate

Func GetInstalledPath()
	; @error = 1 - Not installed
	;Get Installed path
	Static $sInstalledPath = ""
	If $sInstalledPath = "" Then
		$sInstalledPath = RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Malwarebytes' Anti-Malware_is1", "InstallLocation")
		If @error Then
			$sInstalledPath = ""
			Return SetError(1, 0, "")
		EndIf
	EndIf
	Return $sInstalledPath
EndFunc   ;==>GetInstalledPath

Func UninstallMBAM()
	WriteLn("Uninstalling Malwarebytes...")
	ShellExecuteWait(RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Malwarebytes' Anti-Malware_is1", "UninstallString"), "/SILENT", "", "", @SW_HIDE)
EndFunc   ;==>UninstallMBAM

Func InstallMBAM()

	Local $LatestVersion = BinaryToString(InetRead("http://data.mbamupdates.com/v0/program/mbam.check.program"))
	WriteLn("Latest Version of Malwarebytes is " & $LatestVersion)
	Local $bInstall = False

	$InstalledVersion = RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Malwarebytes' Anti-Malware_is1", "DisplayVersion")
	If $InstalledVersion = "" Then
		WriteLn("Malwarebytes not Detected")
		$bInstall = True
	ElseIf $InstalledVersion = $LatestVersion Then
		WriteLn("Latest Version of Malwarebytes is already Installed")
	Else
		WriteLn("Older version detected " & $LatestVersion)
		$bInstall = True
	EndIf

	If $bInstall = True Then
		WriteLn("Downloading Latest Malwarebytes...")
		Local $URL = "http://data-cdn.mbamupdates.com/v0/program/data/mbam-setup-" & $LatestVersion & ".exe"
		Local $ret = InetGet($URL, @TempDir & "\mbam.exe", 1, 1)

		Do
			Sleep(250)
		Until InetGetInfo($ret, 2)

		Local $aData = InetGetInfo($ret) ; Get all information.

		InetClose($ret) ; Close the handle to release resources.
		;MsgBox(0, "", "Bytes read: " & $aData[0] & @CRLF & _
		;		"Size: " & $aData[1] & @CRLF & _
		;			"Complete?: " & $aData[2] & @CRLF & _
		;				"Successful?: " & $aData[3] & @CRLF & _;
		;		"@error: " & $aData[4] & @CRLF & ;_
		;		"@extended: " & $aData[5] & @CRLF)


		If $aData[3] = True Then
			WriteLn("Installing Malwarebytes...")

			Local $pid = Run('"' & @TempDir & '\mbam.exe" /verysilent', @TempDir)
			If @error Then
				WriteLn("Error Running")
				Return SetError(2, 0, False)
			EndIf

			While ProcessExists($pid)
				Sleep(250)
			WEnd

			WriteLn("Malwarebytes Installed!")
			Sleep(5000)
		Else
			WriteLn("Error Downloading Malwarebytes")
			WriteLn($aData[4])
			Return "Error Downloading Malwarebytes" & @CRLF & $aData[4]
		EndIf
	EndIf

EndFunc   ;==>InstallMBAM